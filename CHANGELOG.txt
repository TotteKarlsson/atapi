Release 0.5.3 (June 19)
=======================
* Updated readme
* More restructure
* Restructured source tree
* Moved arraybot related into module arraybot
* Restructuring code tree
* Created a super build group
* Added seperate build for APT classes
* Cleaning up
* Moved arraycam related classes to ArrayCam folder
* Added redist dll
* Added navitar DLL for redistribution
* Added new units to atCore and atVCLCore
* Added navitar vcl frames
* Added navitar classes for controlling the zoom and focus on arraybot
* Added navitar demos
* Getting navitar under control
* Added borland import library and obfuscated dll
* Added Navitar developer files
* Disabled sound enums
* Use Application sounds instead
* Cleaned up DirectSound class
* Fixed bug -> an uninitialized directSoundStructure
* Fixed some implementation details for application sounds
* Got extraction of resources from resource DLL working
* Added class for reading resources from a resource DLL
* Added a frame for an Applications sounds
* Added a frame to play system sounds
* Added new class to handle specific application sounds
* Changed some ints to unsigned ints
* Cleaning up cutting logic

Release 0.5.2 (Apr 26)
=======================
* General changes to VCL frames that are dynamically created -> Pass references instead of pointers
* Added Start, Stop Video, enable disable barcodescanner and other useful requests to the ArrayCamClient class
* Added ability to subscribe to arraycams message processor using a modified observer/subject pattern
* Added more robust handling of arraycam responses
* Simplified XML reading writing of processes
* Got a semi robust handling of arraycamrequests at client side
* Renamed arraycamrequest to arraycamrequestprocess
* Firmed up the actual ArraCam request protocol using a static map
* Some renaming of units
* Added a ArrayCamProtocol class holding message specs, request definitions
* Moved motorwiggler into core
* Removed ProcessSequencer from ArrayBot class
* Added functions and properties to ArrayCamRequest class
* Populating frames with objects in stead of pointers
* Restored state from previous version having arraybot being a pointer in most frames..
* Many changes to processes logic - need testing!!
* Added units for arraycam requests
* Updated code for the labelprinter to accept commands stored in the database
* Added database lookup table enum
* Added utility function to atdb data module: getBlockID
* Fixed some inconsistencies in the CoverSlip datamodule.
* Added a Ribbons datamodule, that might be used for ribbons specific dataprocessing
* Added a ribbonOnCS client dataset
* Added a getLastCount to counter class
* Added getLastNumber of sections property to UC7 component
* Added counter for ribbon order.
* Added field for ribbon creator in ribbons table
* Added a Zebra scanner frame to deal with scanner logic
* Fixed barcode reader crash bug -> needed dynamic lining with runtime libraries
* Added a TCoverSlipDataModule to vcl/datamodules
* Fixed enabling/disabling of joystickaxes while a motorsequence is executed
* Added atdb connection Frame
* Added form to control, start and stop a sequence of processes
* Added Thorlabs library files for Borland
* Added Kinesis files
* Added class for stop and resume operation
* Adding stop and reshttps://github.com/TotteKarlsson/atapiume process
* Fixing ab->at namespace
* Reorganized thirdparty folder somewhat
* Moved doxygen file to new folder
* Improved usability of programmed robot moves frames
* Removed obsolete SendWidowMessage function and cleaned up unnecessary white space
* Added datamatrix parameter structure
* Added satrt/stop decode session functions for barcode scanner
* Simplifying scanner code (SSIDLL)
* Added info about errors
* Added specimententered date field
* Added entered_by field to specimen table
* Added function to hand out the barcode readers memory
* Added a isconnected API call to SSIDLL
* Refactoring ABObject -> ATObject
* Renamed top level ABObject to ATObject
* Added unit for barcodereader class
* Added barcodereader module
* Added ssidll to thirdparty folder
* Adding atSSI dll project code
* Added ssidll code
* Implementing sensor database logging
* Adding db writing from arduinoCOntroller application
* Re-enabling sensors arduino
* Cleaning up arduino code
* Cleaning up arduino controller code
* Added a few sound ID's
* Added usage of YesNo form on position confirmation on AB sequences page
* Changed buttons on sequence frame to be ArraybotButtons, i.e. adding sound
* Removed OnEnter 'update'
* Updated reticle to accept a custom origin
* Changed arduino message processor to not start unless a connection is made
* Added a Reticle class for arrayCam
* Added Yes/No form to VCL library
* Added handling of UC7 system commands.
* Added UC7 north knife stage position max position
* Started work on a threaded soundplayer
* Updated how arraybot shortcut buttons are placed
* Added logic to handle joystick axis deadzones
* Changed motorprocessing delay to 150ms from 50 ms
* Fixed long travelstage stop profiled command to be executed in thread
* Some UC7 fixes regarding moving of the knife stage
* Re=enabled sounds using atResources.dll
* Fixed a motor shutdown bug, related to its status timer
* Removed arduino
* Fixed a VERY nasty bug regarding usage of serialport
* Removed code related to PufferArduino

Release 0.5.1 (Feb 27)
=======================
* Added more info regarding serial connection state in UC7 component
* Renamed UC7MessageConsumer to UC7MessageReceiver
* Cleaned up UC7 message sender and reader
* Fixed bugs in the counter
* Added timed events in UC7 to deal with movement of knife stage
* Added more logic to deal with starting and ending a ribbon
* Added serial message consumer unit
* Added serial message sender
* Added settings for COM port send and receive buffer sizes
* Added outgoing container for messages - use a consumer thread to send them
* Removed printf's in Serial worker
* Changed generation of createEvent handle in serial worker run function
* Added a default of a 512 buffer in atSerial
* Added many functions for orchestrating ribbon separation
* Added functions for section counter
* implementing a counter for the UC7 object
* Renamed atUC7 Unit file to atUC7Component.
* Added fixes to SerialWorker class
* Added ability to set handshake mode for serial communication
* many upgrades to UC7Message class
* Upgrading UC7 software
* Added camera service thread
* Getting UC7 messaging to UI working
* Setting up UC7 message consumption
* Added class that consumes UC7 messages
* Added UC7 Command class
* Added support to choose serial message delimiters
* Implementing a UC7 class
* Added UC7 class to control the Leica UC7 microtome
* Updating to new configuration
* Updated ATDB datamodule to use plural table names, and protocols are moved to blocks
* Added a Query builder
* Added custom print functions to labelprinter API
* Changed TSQLConnection->AutoClone to false
* Adding thirdparty binaries to repository
* Refactored all ab* files into at* files
* Creating database dll
* Refactoring AB => AT
* Added resource DLL

Release 0.5.0 (Nov 8)
=======================
* Initial commit, most code was transferred from the ArrayBot repository


------ 2016 ------
