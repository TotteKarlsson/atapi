Release 0.5.6 (March 23)
=======================
* Merge branch 'tokyo' of https://github.com/TotteKarlsson/atapi into tokyo
# Conflicts:
#	source/atCore.cbproj
#	source/barcodereader/atBarcodeReader.cbproj
#	source/database/atDatabase.cbproj
#	source/resources/atResources.cbproj
#	source/vcl/atVCLCore.cbproj
#	thirdparty/ssidll/atSSI.cbproj
* Changed DEBUG_BUILD -> DEBUG_BUILD32
* Improving movies frame
* Moved obsolete files to archive folder
* Removed references to obsolete ATDBServerSession
* Chasing a bug..
* Added Geist Sensor module code
* Added Geist server/client classes
* Updated movie frame class
* Fixed bug in HDMI streamer - writing to a closed pipe
* Added videorecorderStopped protocol
* Some whitespace changes
* Improved movie frame to properly figure out movie extension
* Improvements to HDMIStreamer frame
* Added DB code to register ribbon id in the movies table
* Implementing HDMI streamer into ArrayCam
* Finishing up HDMI streamer
* Added source code for streaming HDMI
* Added Knife and knife_notes table
* Added datasets and dataset providers for handling knife records
* Refactoring ab -> at in header include guards
* Added Arraybot server class
* Setting up arraybot to be a server
* Added focus in/out functions to Navitar class
* Added focus in/out to Arraycam protocol
* Added trigger ribbonseparator to arraycam protocol
* Added ability to focus and zoom using joystick toggle button
* Added state logic to Joystick button class
* Added reference to joystickbutton in the JoyStickButtonStateEventDispatcher class
* Fixed at resources to use dynamic RTL
* Added   acrSetMoveWhiskerForwardOn,
#    acrMoveWhiskerForwardOnSet,
#    acrSetMoveWhiskerForwardOff,
#    acrMoveWhiskerForwardOffSet,
* to the arraycam protocol
* Added setWhiskerSyncOff and ON to the arraycam client
* Changed logic in joystick axes, and zero (0) speed.
* Changed joystick gears to 25, from 10000 (seem to make no tactile difference)
* Found bug related to absent joystick setting, when enabling the joystick
* * Added more messages to the arraycam protocol:
# "Before Cutting"
# "Cutting"
# "After Cutting"
# "Retracting"
# "Move Whisker Forward"
* Created a TSensorsDataModule

===================== 2018 ======================================
Release 0.5.5 (Nov 11)
=======================
* Removed Auto datamodule connection
* Moved datasets for quering of ribbons on coverslips to coverslip datamodule
* Moved bunch of frames to package
* Added after delete handler for ribbon notes
* Fixing creation of Datamodules living in a package
* Make sure dbmodule have a closed connection on start!
* Fixed memo fields to match postgres
* Something funky about lookup field
* Fixed problem with string lookup field -> set SIZE
* Added addNotefor block datamodule function
* Phasing out ATDBServerSession class
* Archived MySQL db stuff
* Added a DBCredentials class
* Added datamodules for PostGres
* Now working datamodules for PostGres
* Added PostGres connection frame
* Created TPGCoverSlipDataModule
* Phasing out MySQL data usage
* TStringField => TWideStringField
* TMemoField -> TWideMemoField
* Reverted ATDB Datamodule to be pure PostGres
* Added a PG datamodule
* Merge branch 'develop' into postgres
* Added logic for syncing data from local MySQL DB to PostGres
* Added stopping of cutter at various positions
* Some struggles with code in the ATDBConnection frame
* Added image and movies frame to vcl package
* Added frames for looking at images and movies
* Added ImageItemFrame
* Added thread for creation of movie thumbnails
* Added thread for videocompression
* Added frame for movie item
* Fixed so that a ProcessSequence properly populate its name from the XML
* Updated joystick button click mechanism, allowing reading down/up or "click"
* Improved the move coverslip at angle process, allowing camera to stay at the beach while lifting
* Added zoom in and out to the arraycam client protocol, and the navitar motor controller
* Updated Reticle class
* Fixed set LED intensity response
* Added home APTMotor member function
* Various refactoring
* Fixed bug in the process sequencer class, causing the timer to run at highest speed always.
* Added creation of a home motor process to the ProcessProject
* Adding new processtype: homing motor
* Added set and get UC7 cutting and return speed
* Will need to create PostGres datamodules

Release 0.5.4 (Sept 5)
=======================
* Added setLEDIntensity to ArrayCam protocol
* Re-enabled Lights arduino
* Fixed usage of process controller
* Updated the arraycam protocol to allow starting stopping the UC7
* Added ability to sort, and bypass process control form for process sequences
* Added order integer to a process sequence object
* Added ability to pause and resume processes
* Added fetch angle from angle controller executing a MoveAtAngle process
* Time to test Move at angle process
* Getting moveatangle process going
* Added new process type ptLiftAtAngle
* Added new unit for process
* Refactoring: Parallell to Parallel
* Added ability to send custom messages from arraybot API to calling application
* Improved the StopAndResume Process
* Added ability to add a single Absolute move to a process sequence, without having to create a parallel process object
* Added utility function getProcessWithName to the process sequencer
* Changed the how a posted command, i.e. threaded motor command, is enumerated
* made a few class functions const
* Added support for Thorlabs BenchTopStepperMotors
* Added ability to set and get jogMove mode and a motors jogStep
* Added setFocus and zoom functions to navitar controller
* Added setFocusAndZoom to ArrayCam server/Client protocol
* Added ability to save/retrieve from xml focus and zoom arraycam request parameters
* Added feature to add item to combobox if not exists in selectItem function
* Adding functionality to automate zoom and focus on the arraycam server
* Added getXML function to process sequence class
* Added homeAll function to arraybot class
* Added default "General" sequence category.
* Added some utility functions to atdbDM, insertBlock and ribbon notes
* Added a dbsensors datamodule
* Many changes to atdbDataModule due to schema changes
* Fixed navitar motor mixup
* Need more research on how to use datamodule from package
* Some minor compilation speed updates
* Added frames and datamodules to atVCLCore package
* Added miscellaneous UC7 classes/code, e.g. uc7 status history
* Added project file for UC7 components
* Moved counter class to core
* More refactoring
* Added Serial and Arduino modules (DLL's)
* Added common pch header
* Restructered: core files into core folder
* Preparing some frames for packaging.
* Added lookup fields in case Client dataset
* Changed schema to use "cases"
* ProcessID -> specimen_id
* Added client datasets, and associated components for cases data
* Added ability to categorize Process sequences
* Moved Arraybot related frames to Arraybot application source tree
* Added Navitarpreset code
* Moved some units into packages
* Adding Preset classes
* Refactored ab -> at
* Updated version and Changelog

Release 0.5.3 (June 19)
=======================
* Updated readme
* More restructure
* Restructured source tree
* Moved arraybot related into module arraybot
* Restructuring code tree
* Created a super build group
* Added seperate build for APT classes
* Cleaning up
* Moved arraycam related classes to ArrayCam folder
* Added redist dll
* Added navitar DLL for redistribution
* Added new units to atCore and atVCLCore
* Added navitar vcl frames
* Added navitar classes for controlling the zoom and focus on arraybot
* Added navitar demos
* Getting navitar under control
* Added borland import library and obfuscated dll
* Added Navitar developer files
* Disabled sound enums
* Use Application sounds instead
* Cleaned up DirectSound class
* Fixed bug -> an uninitialized directSoundStructure
* Fixed some implementation details for application sounds
* Got extraction of resources from resource DLL working
* Added class for reading resources from a resource DLL
* Added a frame for an Applications sounds
* Added a frame to play system sounds
* Added new class to handle specific application sounds
* Changed some ints to unsigned ints
* Cleaning up cutting logic

Release 0.5.2 (Apr 26)
=======================
* General changes to VCL frames that are dynamically created -> Pass references instead of pointers
* Added Start, Stop Video, enable disable barcodescanner and other useful requests to the ArrayCamClient class
* Added ability to subscribe to arraycams message processor using a modified observer/subject pattern
* Added more robust handling of arraycam responses
* Simplified XML reading writing of processes
* Got a semi robust handling of arraycamrequests at client side
* Renamed arraycamrequest to arraycamrequestprocess
* Firmed up the actual ArraCam request protocol using a static map
* Some renaming of units
* Added a ArrayCamProtocol class holding message specs, request definitions
* Moved motorwiggler into core
* Removed ProcessSequencer from ArrayBot class
* Added functions and properties to ArrayCamRequest class
* Populating frames with objects in stead of pointers
* Restored state from previous version having arraybot being a pointer in most frames..
* Many changes to processes logic - need testing!!
* Added units for arraycam requests
* Updated code for the labelprinter to accept commands stored in the database
* Added database lookup table enum
* Added utility function to atdb data module: getBlockID
* Fixed some inconsistencies in the CoverSlip datamodule.
* Added a Ribbons datamodule, that might be used for ribbons specific dataprocessing
* Added a ribbonOnCS client dataset
* Added a getLastCount to counter class
* Added getLastNumber of sections property to UC7 component
* Added counter for ribbon order.
* Added field for ribbon creator in ribbons table
* Added a Zebra scanner frame to deal with scanner logic
* Fixed barcode reader crash bug -> needed dynamic lining with runtime libraries
* Added a TCoverSlipDataModule to vcl/datamodules
* Fixed enabling/disabling of joystickaxes while a motorsequence is executed
* Added atdb connection Frame
* Added form to control, start and stop a sequence of processes
* Added Thorlabs library files for Borland
* Added Kinesis files
* Added class for stop and resume operation
* Adding stop and reshttps://github.com/TotteKarlsson/atapiume process
* Fixing ab->at namespace
* Reorganized thirdparty folder somewhat
* Moved doxygen file to new folder
* Improved usability of programmed robot moves frames
* Removed obsolete SendWidowMessage function and cleaned up unnecessary white space
* Added datamatrix parameter structure
* Added satrt/stop decode session functions for barcode scanner
* Simplifying scanner code (SSIDLL)
* Added info about errors
* Added specimententered date field
* Added entered_by field to specimen table
* Added function to hand out the barcode readers memory
* Added a isconnected API call to SSIDLL
* Refactoring ABObject -> ATObject
* Renamed top level ABObject to ATObject
* Added unit for barcodereader class
* Added barcodereader module
* Added ssidll to thirdparty folder
* Adding atSSI dll project code
* Added ssidll code
* Implementing sensor database logging
* Adding db writing from arduinoCOntroller application
* Re-enabling sensors arduino
* Cleaning up arduino code
* Cleaning up arduino controller code
* Added a few sound ID's
* Added usage of YesNo form on position confirmation on AB sequences page
* Changed buttons on sequence frame to be ArraybotButtons, i.e. adding sound
* Removed OnEnter 'update'
* Updated reticle to accept a custom origin
* Changed arduino message processor to not start unless a connection is made
* Added a Reticle class for arrayCam
* Added Yes/No form to VCL library
* Added handling of UC7 system commands.
* Added UC7 north knife stage position max position
* Started work on a threaded soundplayer
* Updated how arraybot shortcut buttons are placed
* Added logic to handle joystick axis deadzones
* Changed motorprocessing delay to 150ms from 50 ms
* Fixed long travelstage stop profiled command to be executed in thread
* Some UC7 fixes regarding moving of the knife stage
* Re=enabled sounds using atResources.dll
* Fixed a motor shutdown bug, related to its status timer
* Removed arduino
* Fixed a VERY nasty bug regarding usage of serialport
* Removed code related to PufferArduino

Release 0.5.1 (Feb 27)
=======================
* Added more info regarding serial connection state in UC7 component
* Renamed UC7MessageConsumer to UC7MessageReceiver
* Cleaned up UC7 message sender and reader
* Fixed bugs in the counter
* Added timed events in UC7 to deal with movement of knife stage
* Added more logic to deal with starting and ending a ribbon
* Added serial message consumer unit
* Added serial message sender
* Added settings for COM port send and receive buffer sizes
* Added outgoing container for messages - use a consumer thread to send them
* Removed printf's in Serial worker
* Changed generation of createEvent handle in serial worker run function
* Added a default of a 512 buffer in atSerial
* Added many functions for orchestrating ribbon separation
* Added functions for section counter
* implementing a counter for the UC7 object
* Renamed atUC7 Unit file to atUC7Component.
* Added fixes to SerialWorker class
* Added ability to set handshake mode for serial communication
* many upgrades to UC7Message class
* Upgrading UC7 software
* Added camera service thread
* Getting UC7 messaging to UI working
* Setting up UC7 message consumption
* Added class that consumes UC7 messages
* Added UC7 Command class
* Added support to choose serial message delimiters
* Implementing a UC7 class
* Added UC7 class to control the Leica UC7 microtome
* Updating to new configuration
* Updated ATDB datamodule to use plural table names, and protocols are moved to blocks
* Added a Query builder
* Added custom print functions to labelprinter API
* Changed TSQLConnection->AutoClone to false
* Adding thirdparty binaries to repository
* Refactored all ab* files into at* files
* Creating database dll
* Refactoring AB => AT
* Added resource DLL

Release 0.5.0 (Nov 8)
=======================
* Initial commit, most code was transferred from the ArrayBot repository


------ 2016 ------
